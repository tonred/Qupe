pragma ever-solidity ^0.66.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "../abstract/Server.tsol";
import "../../structures/Infos.tsol";


contract Chat is Server {

    ChatInfo _info;


    function _init(TvmCell params) internal override {
        address owner;
        (owner, _info, _roomCode) = abi.decode(params, (address, ChatInfo, TvmCell));
        Permissions defaultPermissions = PermissionsLibrary.single(Action.CREATE_ROOM);
        _initPermissions(owner, defaultPermissions);
    }

    function changeInfo(CallData data, ChatInfo info) public cashBack hasPermission(data, Action.CONFIG) {
        _info = info;
    }

    function encodeCreateRoomParams(address owner, ChannelInfo info) public pure responsible returns (TvmCell params) {
        return {value: 0, flag: MsgFlag.REMAINING_GAS, bounce: false} abi.encode(owner, info);
    }


    function _checkCreateRoomData(CallData data) internal view override returns (bool) {
        Payment expected = _info.createRoomPayment;
        return _checkPayment(data.payment, expected);
    }

    function _buildCreateRoomInitialParams(TvmCell params, address /*creator*/) internal view override returns (TvmCell) {
        return params;
    }

}
