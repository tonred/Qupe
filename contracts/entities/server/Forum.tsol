pragma ever-solidity ^0.66.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "../abstract/Server.tsol";
import "../../structures/Infos.tsol";


contract Forum is Server {
    using PaymentLibrary for Payment;

    ForumInfo _info;
    TvmCell _messageCode;


    function _init(TvmCell params) internal override returns (address owner) {
        (owner, _info, _roomCode, _messageCode) = abi.decode(params, (address, ForumInfo, TvmCell, TvmCell));
        Permissions defaultPermissions = PermissionsLibrary.single(Action.CREATE_ROOM);
        _initPermissions(owner, defaultPermissions);
    }

    function changeInfo(CallData data, ForumInfo info) public cashBack hasPermission(data, Action.CONFIG) {
        _info = info;
    }

    function encodeCreateRoomParams(address owner, TopicInfo info) public pure responsible returns (TvmCell params) {
        return {value: 0, flag: MsgFlag.REMAINING_GAS, bounce: false} abi.encode(owner, info);
    }


    function _checkCreateRoomData(CallData data) internal view override returns (bool) {
        Payment price = _info.createRoomPayment;
        if (!data.payment.moreThan(price)) {
            return false;
        }
        if (!data.userData.hasValue()) {
            return false;
        }
        UserData userData = data.userData.get();
        return userData.reputation >= _info.createRoomReputation;
    }

    function _buildCreateRoomInitialParams(TvmCell params, address /*creator*/) internal view override returns (TvmCell) {
        (address owner, TopicInfo info) = abi.decode(params, (address, TopicInfo));
        return abi.encode(owner, info, _messageCode);
    }

}
