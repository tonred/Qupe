pragma ever-solidity ^0.66.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "../abstract/Server.tsol";
import "../../structures/Infos.tsol";


contract Blog is Server {

    BlogInfo public _info;


    function _init(TvmCell params) internal override {
        address owner;
        mapping(uint8 => bool) defaultRights;
        (owner, _info, _roomCode) = abi.decode(params, (address, BlogInfo, TvmCell));
        defaultRights[uint8(Action.CREATE_ROOM)] = true;
        _initPermissions(address(0), defaultRights);

        mapping(uint8 => bool) ownerRights;
        ownerRights[uint8(Action.CONFIG)] = true;
        ownerRights[uint8(Action.CREATE_ROOM)] = true;
        uint32 group = _permissions.createGroup(ownerRights);
        _permissions.setUserGroup(owner, group);
    }

    function changeInfo(BlogInfo info) public cashBack hasPermission(Action.CONFIG) {
        _info = info;
    }


    function _checkCreateRoomParams(TvmCell params) internal pure override returns (bool) {
        return params.toSlice().empty();
    }

    function _checkCreateRoomData(Payment /*payment*/, optional(UserData) /*data*/) internal view override returns (bool) {
        return true;
    }

    function _buildCreateRoomInitialParams(TvmCell /*params*/, address creator) internal view override returns (TvmCell) {
        return abi.encode(creator);
    }

}
