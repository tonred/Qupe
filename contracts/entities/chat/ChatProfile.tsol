pragma ever-solidity ^0.66.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "../abstract/Profile.tsol";
import "./Channel.tsol";
import "./Chat.tsol";


contract ChatProfile is Profile {

    function createRoom(
        uint64 serverID,
        address owner,
        ChannelInfo info,
        Payment payment
    ) public onlyOwner onlyJoined(serverID, address(0)) {
        require(PaymentLibrary.isJointVault(info.messagePayment, info.highlightMessagePayment), ErrorCodes.NOT_JOINT_VAULT);
        TvmCell params = abi.encode(owner, info);
        _createRoom(serverID, params, payment);
    }

    function changeServerInfo(
        uint64 serverID,
        ChatInfo info
    ) public view minValue(Gas.PROFILE_PROXY_VALUE) onlyOwner {
        _reserve();
        emit ChangeServerInfo(serverID);
        address server = _serverAddress(serverID);
        CallData data = _buildCallData(server, null);
        Chat(server).changeInfo{
            value: 0,
            flag: MsgFlag.ALL_NOT_RESERVED,
            bounce: true
        }(data, info);
    }

    function changeRoomInfo(
        uint64 serverID,
        uint64 roomID,
        ChannelInfo info
    ) public view minValue(Gas.PROFILE_PROXY_VALUE) onlyOwner {
        _reserve();
        emit ChangeRoomInfo(serverID, roomID);
        address room = _roomAddress(serverID, roomID);
        CallData data = _buildCallData(room, null);
        Channel(room).changeInfo{
            value: 0,
            flag: MsgFlag.ALL_NOT_RESERVED,
            bounce: true
        }(data, info);
    }

}
