pragma ever-solidity ^0.66.0;

import "../../structures/Infos.tsol";
import "../abstract/Server.tsol";


contract Chat is Server {
    using PaymentLibrary for Payment;

    ChatInfo _info;

    function _init(TvmCell params) internal override returns (address owner, address token) {
        (owner, _info, _roomCode) = abi.decode(params, (address, ChatInfo, TvmCell));
        Permissions defaultPermissions = PermissionsLibrary.single(Action.CREATE_ROOM);
        _initPermissions(owner, defaultPermissions);
        token = _info.createRoomPayment.token;
    }

    function changeInfo(CallData data, ChatInfo info) public cashBack hasPermission(data, Action.CONFIG) {
        _info = info;
    }

    function _checkCreateRoomData(CallData data) internal view override returns (bool) {
        Payment price = _info.createRoomPayment;
        return data.payment.moreThan(price);
    }

    function _buildCreateRoomInitialParams(TvmCell params, address /*creator*/) internal view override returns (TvmCell) {
        return params;
    }

}
