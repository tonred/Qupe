pragma ever-solidity ^0.66.0;

import "../abstract/Room.tsol";


contract Page is Room {

    address _owner;  // is not changeable


    function _init(TvmCell params) internal override returns (
        address owner, address token, optional(Permissions) ownerPermissions
    ) {
        _owner = abi.decode(params, address);
        _initPermissions(PermissionsLibrary.none());
        ownerPermissions = PermissionsLibrary.single(Action.SEND_MESSAGE);
        return (_owner, address(0), ownerPermissions);
    }

    function getOwner() public view responsible returns (address owner) {
        return {value: 0, flag: MsgFlag.REMAINING_GAS, bounce: false} _owner;
    }


    function _checkAcceptMessageData(CallData data, TvmCell /*properties*/) internal view override returns (bool) {
        return data.user == _owner;
    }


    function _encodeContractData() internal override returns (TvmCell) {
        return abi.encode(
            _token, _wallet, _balance,              // Vault
            _root, _platformCode,                   // PlatformUtils
            _sid, _version,                         // BaseSlave
            _defaultPermissions,                    // Base
            _serverID, _roomID, _messagesCount,     // Room
            _owner
        );
    }

}
