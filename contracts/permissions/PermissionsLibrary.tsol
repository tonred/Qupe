pragma ever-solidity ^0.66.0;

import "./Permissions.tsol";


library PermissionsLibrary {
    using PermissionsLibrary for Permissions;

    uint8 constant COUNT = 5;

    function validate(Permissions permissions) internal returns (bool) {
        return permissions.values.length == COUNT;
    }

    function check(Permissions permissions, Action action) internal returns (bool) {
        uint8 actionID = uint8(action);
        return permissions.values[actionID];
    }

    function set(Permissions permissions, Action action, bool value) internal {
        uint8 actionID = uint8(action);
        permissions.values[actionID] = value;
    }

    function full() internal returns (Permissions) {
        return Permissions([true, true, true, true, true]);
    }

    function none() internal returns (Permissions) {
        return Permissions([false, false, false, false, false]);
    }

    function single(Action action) internal returns (Permissions) {
        Permissions permission = none();
        permission.set(action, true);
        return permission;
    }

}
